{"ast":null,"code":"var _jsxFileName = \"/Users/jirusanun/Downloads/sample-01/src/views/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [submittedData, setSubmittedData] = useState(null); // Track submitted data\n\n  const handleLogin = () => {\n    // In a real application, you would call an API to authenticate the user.\n    // For this example, we'll compare credentials with the mock backend.\n    const users = require(\"./user.json\"); // Import the mock user data\n\n    const user = users.find(user => user.username === username && user.password === password);\n    if (user) {\n      // Set user info in local storage or context for authentication\n      // In a real application, you would handle authentication securely\n      localStorage.setItem(\"adminUser\", JSON.stringify(user));\n      history.push(\"/admin\");\n    } else {\n      setError(\"Invalid credentials\");\n    }\n\n    // Store submitted data for display\n    setSubmittedData({\n      username,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitted-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Submitted Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", submittedData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", submittedData.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLogin, \"HNBXl2ppC5mBCJ5JJ/SjQQjWYd0=\", false, function () {\n  return [useHistory];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","AdminLogin","_s","history","username","setUsername","password","setPassword","error","setError","submittedData","setSubmittedData","handleLogin","users","require","user","find","localStorage","setItem","JSON","stringify","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/jirusanun/Downloads/sample-01/src/views/AdminLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AdminLogin = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [submittedData, setSubmittedData] = useState(null); // Track submitted data\n\n    const handleLogin = () => {\n        // In a real application, you would call an API to authenticate the user.\n        // For this example, we'll compare credentials with the mock backend.\n        const users = require(\"./user.json\"); // Import the mock user data\n\n        const user = users.find((user) => user.username === username && user.password === password);\n        if (user) {\n            // Set user info in local storage or context for authentication\n            // In a real application, you would handle authentication securely\n            localStorage.setItem(\"adminUser\", JSON.stringify(user));\n            history.push(\"/admin\");\n        } else {\n            setError(\"Invalid credentials\");\n        }\n\n        // Store submitted data for display\n        setSubmittedData({ username, password });\n    };\n\n    return (\n        <div className=\"text-center\">\n            <h1>Admin Login</h1>\n            {error && <p className=\"text-danger\">{error}</p>}\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <br />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <br />\n            <button onClick={handleLogin}>Login</button>\n\n            {/* Display submitted data */}\n            {submittedData && (\n                <div className=\"submitted-data\">\n                    <h2>Submitted Data:</h2>\n                    <p>Username: {submittedData.username}</p>\n                    <p>Password: {submittedData.password}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AdminLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}