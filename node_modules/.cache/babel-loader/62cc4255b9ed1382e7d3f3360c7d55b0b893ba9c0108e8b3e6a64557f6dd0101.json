{"ast":null,"code":"var _jsxFileName = \"/Users/jirusanun/Downloads/sample-01/src/views/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, Alert } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [submittedData, setSubmittedData] = useState(null); // Track submitted data\n\n  const handleLogin = () => {\n    // In a real application, you would call an API to authenticate the user.\n    // For this example, we'll compare credentials with the mock backend.\n    const users = require(\"./user.json\"); // Import the mock user data\n\n    const user = users.find(user => user.username === username && user.password === password);\n    if (user) {\n      // Set user info in local storage or context for authentication\n      // In a real application, you would handle authentication securely\n      localStorage.setItem(\"adminUser\", JSON.stringify(user));\n      history.push(\"/admin\");\n    } else {\n      setError(\"Invalid credentials\");\n      setTimeout(() => setError(\"\"), 3000); // Clear error after 3 seconds\n    }\n\n    // Store submitted data for display\n    setSubmittedData({\n      username,\n      password\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 8,\n        md: 6,\n        lg: 4,\n        className: \"mx-auto mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: handleLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLogin, \"HNBXl2ppC5mBCJ5JJ/SjQQjWYd0=\", false, function () {\n  return [useHistory];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useHistory","Container","Row","Col","Form","FormGroup","Label","Input","Button","Alert","jsxDEV","_jsxDEV","AdminLogin","_s","history","username","setUsername","password","setPassword","error","setError","submittedData","setSubmittedData","handleLogin","users","require","user","find","localStorage","setItem","JSON","stringify","push","setTimeout","className","children","xs","sm","md","lg","fileName","_jsxFileName","lineNumber","columnNumber","color","for","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/jirusanun/Downloads/sample-01/src/views/AdminLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, Alert } from \"reactstrap\";\n\nconst AdminLogin = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [submittedData, setSubmittedData] = useState(null); // Track submitted data\n\n    const handleLogin = () => {\n        // In a real application, you would call an API to authenticate the user.\n        // For this example, we'll compare credentials with the mock backend.\n        const users = require(\"./user.json\"); // Import the mock user data\n\n        const user = users.find(\n            (user) =>\n                user.username === username && user.password === password\n        );\n        if (user) {\n            // Set user info in local storage or context for authentication\n            // In a real application, you would handle authentication securely\n            localStorage.setItem(\"adminUser\", JSON.stringify(user));\n            history.push(\"/admin\");\n        } else {\n            setError(\"Invalid credentials\");\n            setTimeout(() => setError(\"\"), 3000); // Clear error after 3 seconds\n        }\n\n        // Store submitted data for display\n        setSubmittedData({ username, password });\n    };\n\n    return (\n        <Container className=\"text-center\">\n            <Row>\n                <Col xs={12} sm={8} md={6} lg={4} className=\"mx-auto mt-5\">\n                    <h1>Admin Login</h1>\n                    {error && <Alert color=\"danger\">{error}</Alert>}\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"username\">Username</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </FormGroup>\n                        <Button color=\"primary\" onClick={handleLogin}>\n                            Login\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default AdminLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}