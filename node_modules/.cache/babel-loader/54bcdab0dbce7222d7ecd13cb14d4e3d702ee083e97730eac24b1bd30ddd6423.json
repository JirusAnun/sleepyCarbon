{"ast":null,"code":"import _slicedToArray from\"/Users/jirusanun/Documents/GitHub/sleepyCarbon/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{Container,Row,Col,Form,FormGroup,Label,Input,Button,Alert}from\"reactstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AdminLogin=function AdminLogin(){var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),submittedData=_useState8[0],setSubmittedData=_useState8[1];// Track submitted data\nvar handleLogin=function handleLogin(){// In a real application, you would call an API to authenticate the user.\n// For this example, we'll compare credentials with the mock backend.\nvar users=require(\"./user.json\");// Import the mock user data\nvar user=users.find(function(user){return user.username===username&&user.password===password;});if(user){// Set user info in local storage or context for authentication\n// In a real application, you would handle authentication securely\nlocalStorage.setItem(\"adminUser\",JSON.stringify(user));history.push(\"/admin\");}else{setError(\"Invalid credentials\");setTimeout(function(){return setError(\"\");},3000);// Clear error after 3 seconds\n}// Store submitted data for display\nsetSubmittedData({username:username,password:password});};return/*#__PURE__*/_jsx(Container,{className:\"text-center\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{xs:12,sm:8,md:6,lg:4,className:\"mx-auto mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Login\"}),error&&/*#__PURE__*/_jsx(Alert,{color:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",id:\"username\",value:username,onChange:function onChange(e){return setUsername(e.target.value);}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{type:\"password\",id:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleLogin,children:\"Login\"})]})]})})});};export default AdminLogin;","map":{"version":3,"names":["React","useState","useHistory","Container","Row","Col","Form","FormGroup","Label","Input","Button","Alert","jsx","_jsx","jsxs","_jsxs","AdminLogin","history","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","_useState7","_useState8","submittedData","setSubmittedData","handleLogin","users","require","user","find","localStorage","setItem","JSON","stringify","push","setTimeout","className","children","xs","sm","md","lg","color","for","type","id","value","onChange","e","target","onClick"],"sources":["/Users/jirusanun/Documents/GitHub/sleepyCarbon/src/views/AdminLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Container,\n    Row,\n    Col,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Alert,\n} from \"reactstrap\";\n\nconst AdminLogin = () => {\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [submittedData, setSubmittedData] = useState(null); // Track submitted data\n\n    const handleLogin = () => {\n        // In a real application, you would call an API to authenticate the user.\n        // For this example, we'll compare credentials with the mock backend.\n        const users = require(\"./user.json\"); // Import the mock user data\n\n        const user = users.find(\n            (user) =>\n                user.username === username && user.password === password\n        );\n        if (user) {\n            // Set user info in local storage or context for authentication\n            // In a real application, you would handle authentication securely\n            localStorage.setItem(\"adminUser\", JSON.stringify(user));\n            history.push(\"/admin\");\n        } else {\n            setError(\"Invalid credentials\");\n            setTimeout(() => setError(\"\"), 3000); // Clear error after 3 seconds\n        }\n\n        // Store submitted data for display\n        setSubmittedData({ username, password });\n    };\n\n    return (\n        <Container className=\"text-center\">\n            <Row>\n                <Col xs={12} sm={8} md={6} lg={4} className=\"mx-auto mt-5\">\n                    <h1>Admin Login</h1>\n                    {error && <Alert color=\"danger\">{error}</Alert>}\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"username\">Username</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </FormGroup>\n                        <Button color=\"primary\" onClick={handleLogin}>\n                            Login\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default AdminLogin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}